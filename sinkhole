#include <iostream>
#include <vector>
#define MAX 1000000

using namespace std;

class Queue{
private:
    int qfront;
    int rear;
    int qsize;
    int* values;
public:
    Queue() {
        qsize = MAX;
        values = new int[qsize];
        qfront=0;
        rear=0;
    }
    ~Queue(){
        delete[] values;
    }
    void enqueue(int e) {
        values[rear] = e;
        rear = (rear+1)%qsize;
    }
    int dequeue(){
        int tmp=values[qfront];
        qfront = (qfront+1)%qsize;
        return tmp;
    }
};
int main()
{
    int w, k, n, cnt=1, i;
    cin >> w >> k >> n;

    Queue Q=Queue();
    for(i=0;i<n;i++){
        int tmp;
        cin >> tmp;
        Q.enqueue(tmp);
    }
    vector<int> temp;
    int sum=0;
    for(i=0;i<n;i++){
       // if(k==1) {
         //   cnt=n;
           // break;
        //}
        int tmp=Q.dequeue();
        if(temp.size()==k-1){
            if(sum+tmp<=w){
                temp.push_back(tmp);
                int var[k-1];
                for(int j=1;j<k;j++){
                    var[j-1]=temp[j];
                }
                temp.clear();
                sum=0;
                for(int j=0;j<k-1;j++){
                    temp.push_back(var[j]);
                    sum+=var[j];
                }
            }
            else{
                temp.clear();
                cnt++;
                temp.push_back(tmp);
                sum=tmp;
            }
        }
        else{
           if(sum+tmp>w) {
                temp.clear();
                cnt++;
                temp.push_back(tmp);
                sum=tmp;
            }
            else{
                temp.push_back(tmp);
                sum+=tmp;
            }
        }
    }
    cout << cnt;
    return 0;
}
